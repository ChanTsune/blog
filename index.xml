<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>エンジニアもどきの技術メモ</title><link>https://chantsune.github.io/</link><description>Recent content on エンジニアもどきの技術メモ</description><generator>Hugo -- gohugo.io</generator><language>ja</language><lastBuildDate>Mon, 01 Oct 2018 09:46:14 +0000</lastBuildDate><atom:link href="https://chantsune.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Djangoのデータベース操作まとめ</title><link>https://chantsune.github.io/articles/10/</link><pubDate>Mon, 01 Oct 2018 09:46:14 +0000</pubDate><guid>https://chantsune.github.io/articles/10/</guid><description>クエリメソッド（QueryAPI）一覧表 Django v2.0に対応 各メソッドの詳細は公式サイトを参照のこと https://docs.djangoproject.com/ja/2.0/ref/models/querysets/ 大分類 小分類 メソッド 全件取得 all() 検索条件を指</description></item><item><title>HTMLのformに自動保存機能を付けよう</title><link>https://chantsune.github.io/articles/11/</link><pubDate>Mon, 01 Oct 2018 08:56:02 +0000</pubDate><guid>https://chantsune.github.io/articles/11/</guid><description>はじめに なぜ自動保存機能を付けようと思い至ったかと申し上げますと、 先日、30分くらいかけて編集していたメモ(当サイト記事)を更新する時、ネッ</description></item><item><title>Djangoでjsonを送受信する</title><link>https://chantsune.github.io/articles/12/</link><pubDate>Mon, 01 Oct 2018 06:55:38 +0000</pubDate><guid>https://chantsune.github.io/articles/12/</guid><description>Djangoでのjsonの送受信についてメモ、送信はいいけど受信は割と忘れそう。 送信 from django.http.response import JsonResponse def jsonSend(request): json_data = {&amp;#34;data&amp;#34;:{&amp;#34;daat1&amp;#34;:&amp;#34;DATA1&amp;#34;,&amp;#34;data2&amp;#34;:&amp;#34;DATA2&amp;#34;}} return JsonResponse(json_data) jsonを送信するには辞書型のオブ</description></item><item><title>DjangoサーバーでGzip転送を有効にしてみる</title><link>https://chantsune.github.io/articles/9/</link><pubDate>Sat, 29 Sep 2018 09:11:15 +0000</pubDate><guid>https://chantsune.github.io/articles/9/</guid><description>やりたいこと Djangoサーバーで配信するHTML等の要素をGzipで圧縮して利用帯域幅を削減したい。 やってみる 実はDjangoには標準でG</description></item><item><title>markdownをシンタックスハイライト付きでHTMLにしてみる</title><link>https://chantsune.github.io/articles/8/</link><pubDate>Thu, 27 Sep 2018 14:18:49 +0000</pubDate><guid>https://chantsune.github.io/articles/8/</guid><description>やりたいこと このサイトにもコードを張り付けることがあるわけですが、そのままではどうにも見づらい。 というわけで、markdownをシンタックス</description></item><item><title>Bootstrapの「container-fluid」と「container」って結局どう違うの？</title><link>https://chantsune.github.io/articles/7/</link><pubDate>Thu, 27 Sep 2018 13:14:41 +0000</pubDate><guid>https://chantsune.github.io/articles/7/</guid><description>結論 画面の左右に余白をもたせたい場合は「container」 画面いっぱいにコンテンツを表示するなら「container-fluid」 感覚とし</description></item><item><title>Webサイトにマークダウンエディタを組み込む話</title><link>https://chantsune.github.io/articles/6/</link><pubDate>Thu, 27 Sep 2018 11:11:59 +0000</pubDate><guid>https://chantsune.github.io/articles/6/</guid><description>このサイトのメモの内容はマークダウンで書き込んでいるのですが、 何件か書き込んだあたりで「普通のフォームだと書きづらい」、「編集しながらどんな</description></item><item><title>pythonでmarkdownをHTMLに変換する</title><link>https://chantsune.github.io/articles/5/</link><pubDate>Thu, 27 Sep 2018 09:52:15 +0000</pubDate><guid>https://chantsune.github.io/articles/5/</guid><description>超簡単 pip install markdown でインストールして import markdown as md html = md.markdown(&amp;#34;#markdown&amp;#34;) これだけ 一応拡張機能でシンタックスハイライト対応もできるみたいだけど今回は割愛。 気が向いたら追記</description></item><item><title>Djangoで作ったアプリをherokuにデプロイする時の一連の流れ</title><link>https://chantsune.github.io/articles/4/</link><pubDate>Thu, 27 Sep 2018 01:06:13 +0000</pubDate><guid>https://chantsune.github.io/articles/4/</guid><description>このサイト自体を公開する時に行った作業の一連の流れです。 前提 ・python3及びDjangoについて基本的な知識がある事 ・Djangoで既に</description></item><item><title>Heroku CLIのコマンドまとめ</title><link>https://chantsune.github.io/articles/3/</link><pubDate>Thu, 27 Sep 2018 00:55:19 +0000</pubDate><guid>https://chantsune.github.io/articles/3/</guid><description>よく使う Heroku CLIのコマンド 一度設定してしまうとあまり使わないので忘れないためにメモ ログインとログアウト heroku login heroku CLIでプロジェクトに関する操作</description></item><item><title>Pythonでの三項演算子</title><link>https://chantsune.github.io/articles/2/</link><pubDate>Thu, 27 Sep 2018 00:25:43 +0000</pubDate><guid>https://chantsune.github.io/articles/2/</guid><description>三項演算子を使うことで代入の条件分岐を一行でスマートに記述することができます。 用法 (変数) = (条件がTrueのときの値) if (条件) else (条件が</description></item></channel></rss>