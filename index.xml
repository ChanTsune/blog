<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>エンジニアもどきの技術メモ</title><link>https://chantsune.github.io/</link><description>Recent content on エンジニアもどきの技術メモ</description><generator>Hugo -- gohugo.io</generator><language>ja</language><lastBuildDate>Tue, 21 Feb 2023 00:25:43 +0000</lastBuildDate><atom:link href="https://chantsune.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>vscodeの正規表現検索でファイルの先頭、ファイルの末尾にマッチさせて検索</title><link>https://chantsune.github.io/articles/1/</link><pubDate>Tue, 21 Feb 2023 00:25:43 +0000</pubDate><guid>https://chantsune.github.io/articles/1/</guid><description>ファイルの先頭にマッチさせる ^(?&amp;lt;!\n) ファイルの先頭は行頭(^)に対して否定後読みを利用して、「2行目以降の行頭を除外した行頭」を検索することで実現</description></item><item><title>tar ballが .gzだろうが.xzだろうが.zstだろうが解凍してやる！</title><link>https://chantsune.github.io/articles/288/</link><pubDate>Tue, 14 Jun 2022 11:38:51 +0000</pubDate><guid>https://chantsune.github.io/articles/288/</guid><description>TL;DR #!/bin/bash untar_by_file_type() { if [[ &amp;#34;$1&amp;#34; == &amp;#34;application/x-tar&amp;#34; ]]; then tar -xvf &amp;#34;$2&amp;#34; elif [[ &amp;#34;$1&amp;#34; == &amp;#34;application/gzip&amp;#34; ]]; then tar -zxvf &amp;#34;$2&amp;#34; elif [[ &amp;#34;$1&amp;#34; == &amp;#34;application/x-xz&amp;#34; ]]; then tar -Jxvf &amp;#34;$2&amp;#34; elif [[ &amp;#34;$1&amp;#34; == &amp;#34;application/zstd&amp;#34; ]]; then tar --use-compress-program unzstd -xvf &amp;#34;$2&amp;#34; fi } untar() { if [[ &amp;#34;$1&amp;#34; == &amp;#34;&amp;#34; ]]; then echo &amp;#34;usage: untar &amp;lt;archive-filename&amp;gt;&amp;#34; exit 1 fi untar_by_file_type &amp;#34;$(file -b --mime-type &amp;#34;$1&amp;#34;)&amp;#34; &amp;#34;$1&amp;#34;</description></item><item><title>[Excel]JAN-13とインジケータからGTIN-14を計算する</title><link>https://chantsune.github.io/articles/198/</link><pubDate>Sat, 23 Apr 2022 02:24:38 +0000</pubDate><guid>https://chantsune.github.io/articles/198/</guid><description>JAN-13とインジケータからGTIN-14を計算する関数 TD, TL A B C D 1 インジケータ JAN-13 GTIN-14 2 1 4549414003260 =CONCATENATE(TEXT(B2, &amp;ldquo;0&amp;rdquo;), LEFT(TEXT(C2, &amp;ldquo;0000000000000&amp;rdquo;), 12), TEXT(10 - MOD(SUM(VALUE(MID(C2, 1, 1)), VALUE(MID(C2, 3, 1)), VALUE(MID(C2, 5, 1)), VALUE(MID(C2, 7, 1)), VALUE(MID(C2, 9, 1)), VALUE(MID(C2,</description></item><item><title>ディレクトリ内のwavファイルをffmpegでまとめてflacに変換</title><link>https://chantsune.github.io/articles/289/</link><pubDate>Sat, 27 Nov 2021 09:42:13 +0000</pubDate><guid>https://chantsune.github.io/articles/289/</guid><description>NASの容量を圧迫していたwavファイルが結構あったのでそいつらをまとめてflacに変換したいなぁと思ったので、ディレクトリ内のwavファイ</description></item><item><title>Xcode プロジェクトの project.pbxproj が壊れて開けない</title><link>https://chantsune.github.io/articles/290/</link><pubDate>Tue, 06 Jul 2021 05:35:29 +0000</pubDate><guid>https://chantsune.github.io/articles/290/</guid><description>project.pbxprojをやんごとなき事情でコンフリクト解消した後、プロジェクトを開くと cannot be opened because the project file cannot be parsed で syntax error で開けなくなったりす</description></item><item><title>kotlinでEnumをもっと便利に使いたい！</title><link>https://chantsune.github.io/articles/173/</link><pubDate>Thu, 10 Sep 2020 07:47:41 +0000</pubDate><guid>https://chantsune.github.io/articles/173/</guid><description>はじめに kotlinはJetbrains社が開発したJavaとの運用互換性100%と謳われるプログラミング言語です。 そう謳うだけあってEnu</description></item><item><title>[golang] 構造体(struct)のdeepcopy</title><link>https://chantsune.github.io/articles/238/</link><pubDate>Thu, 09 Apr 2020 07:33:53 +0000</pubDate><guid>https://chantsune.github.io/articles/238/</guid><description>golangで構造体のdeepcopyを行う方法のメモです。 ポインタをメンバに持った構造体のdeepcopyをgolangだとどんな感じでで</description></item><item><title>[Django] カスタムユーザーを利用する</title><link>https://chantsune.github.io/articles/124/</link><pubDate>Wed, 18 Mar 2020 03:31:08 +0000</pubDate><guid>https://chantsune.github.io/articles/124/</guid><description>Djangoのユーザー認証をDjango標準のUserモデルではなく自分で定義したものを利用するメモです。 カスタムユーザー Djangoでカス</description></item><item><title>Swiftにインクリメント(++)、デクリメント(--)を復活させる</title><link>https://chantsune.github.io/articles/82/</link><pubDate>Fri, 06 Mar 2020 16:19:22 +0000</pubDate><guid>https://chantsune.github.io/articles/82/</guid><description>Swift3でインクリメント、デクリメントが削除されました。 しかし、慣れ親しんだインクリメント、デクリメントを使いたい。 そんなわけで、Swi</description></item><item><title>PNGイメージのデータ構造を知ってみる(2)</title><link>https://chantsune.github.io/articles/65/</link><pubDate>Tue, 03 Mar 2020 09:21:42 +0000</pubDate><guid>https://chantsune.github.io/articles/65/</guid><description>前回PNGイメージのデータ構造を知ってみる(1)の続きです。 前回はPNGファイルの基本的な構造であるチャンクとその中でも必須チャンクについて</description></item><item><title>Android OSをMacでビルドしようと思ったらglob: fcntl: too many open filesって言われた話</title><link>https://chantsune.github.io/articles/192/</link><pubDate>Tue, 25 Feb 2020 00:06:09 +0000</pubDate><guid>https://chantsune.github.io/articles/192/</guid><description>そんなにたいした話じゃないです。 MacでAndroid OSをビルドしようと思ったら途中でglob: fcntl: too many open filesって言われて、ビルドが止</description></item><item><title>[Django] プロジェクトの作成にカスタムテンプレートを利用する</title><link>https://chantsune.github.io/articles/186/</link><pubDate>Wed, 19 Feb 2020 07:41:24 +0000</pubDate><guid>https://chantsune.github.io/articles/186/</guid><description>Djangoでいくつかプロジェクトを作っていると大体、自分なりのプロジェクトの雛形っていうのができてくると思います。 毎回、デフォルトのテンプ</description></item><item><title>herokuのアプリケーションを複製する</title><link>https://chantsune.github.io/articles/281/</link><pubDate>Wed, 12 Feb 2020 04:44:07 +0000</pubDate><guid>https://chantsune.github.io/articles/281/</guid><description>herokuのアプリケーションって意外と簡単に複製できるんだよって話です。 アプリーケーションを複製する https://devcenter.heroku.com/articles/fork-app プラグインのインストール 以前は、he</description></item><item><title>[Django] Http Headerを取得、追加する方法</title><link>https://chantsune.github.io/articles/83/</link><pubDate>Tue, 11 Feb 2020 09:54:36 +0000</pubDate><guid>https://chantsune.github.io/articles/83/</guid><description>Djangoでリクエストヘッダやレスポンスヘッダを操作する方法のご紹介 基本 リクエストヘッダはHttpRequestのMETA属性、レスポンス</description></item><item><title>[Django] FormViewについて詳しく見てみる</title><link>https://chantsune.github.io/articles/285/</link><pubDate>Sun, 09 Feb 2020 04:45:43 +0000</pubDate><guid>https://chantsune.github.io/articles/285/</guid><description>今回はFormViewについて詳しく見てみましょう。 Githubよりソースコードを拝借します。 django/django https://github.com/django/django/tree/stable/2.2.x FormView では、FormViewから class FormView(TemplateResponseMixin, BaseFormView): &amp;#34;&amp;#34;&amp;#34;A view for displaying</description></item><item><title>django-herokuがインストール出来ない</title><link>https://chantsune.github.io/articles/197/</link><pubDate>Thu, 06 Feb 2020 09:21:03 +0000</pubDate><guid>https://chantsune.github.io/articles/197/</guid><description>pipでdjango-herokuをインストールしようとするとdjango-herokuが依存しているpsycopg2がコンパイルにコケてイ</description></item><item><title>[Travis CI] matrixの設定</title><link>https://chantsune.github.io/articles/282/</link><pubDate>Mon, 03 Feb 2020 13:53:03 +0000</pubDate><guid>https://chantsune.github.io/articles/282/</guid><description>つい先日からtravis ci を触り始めて、ようやく.travis.ymlのmatrixの設定の意味がわかったので忘れないようにメモ Travis CI Travis CIは</description></item><item><title>[Django] マイグレーションファイルなしでテストを実行する</title><link>https://chantsune.github.io/articles/187/</link><pubDate>Sun, 02 Feb 2020 10:01:42 +0000</pubDate><guid>https://chantsune.github.io/articles/187/</guid><description>Djangoでテストを行うときに、モデルを利用したテストを行うことがあると思うのですが、そのときに毎回マイグレーションファイルを作成してから</description></item><item><title>[python] pipでGitHubのコードを直接インストールする</title><link>https://chantsune.github.io/articles/293/</link><pubDate>Wed, 29 Jan 2020 18:04:15 +0000</pubDate><guid>https://chantsune.github.io/articles/293/</guid><description>人の作ったライブラリをフォークして改良したり、まだpypiにホストされていない最新のコードを利用したかったりする場合に、Githubから直接</description></item><item><title>Bootrtrap4のブレークポイント一覧</title><link>https://chantsune.github.io/articles/284/</link><pubDate>Wed, 25 Dec 2019 09:56:22 +0000</pubDate><guid>https://chantsune.github.io/articles/284/</guid><description>sm,md,lgなどのブレークポイントの一覧 Bootstrapベースで作っていると独自のスタイルを当てるときもBootstrapに合わせてブ</description></item><item><title>[Swift] 自作のパッケージをCocoaPods、Carthage、Swift Package Manager対応させる</title><link>https://chantsune.github.io/articles/241/</link><pubDate>Mon, 02 Dec 2019 16:46:35 +0000</pubDate><guid>https://chantsune.github.io/articles/241/</guid><description>自作のSwift製ライブラリをSwiftで用いられる主要なパッケージマネージャー(CocoaPods、Carthage、Swift Package Mana</description></item><item><title>[Django] cookie情報の設定、取得方法</title><link>https://chantsune.github.io/articles/195/</link><pubDate>Wed, 06 Nov 2019 05:55:16 +0000</pubDate><guid>https://chantsune.github.io/articles/195/</guid><description>クラスベース クラスベースビューから操作する場合はdispatchメソッドをオーバーライドするのが一番お手軽だろう。 from datetime import datetime, timedelta from django.views.generic import TemplateView class MyView(TemplateView): template_name =</description></item><item><title>[cocoapods] ローカルやフォークしたライブラリを利用する</title><link>https://chantsune.github.io/articles/287/</link><pubDate>Tue, 29 Oct 2019 11:10:46 +0000</pubDate><guid>https://chantsune.github.io/articles/287/</guid><description>一般的にはcocoapodsでライブラリを管理する場合、cocoapodsにライブラリを登録することになると思います。 が、ローカルにあるライ</description></item><item><title>[Swift] UIImageをリサイズする方法メモ</title><link>https://chantsune.github.io/articles/286/</link><pubDate>Fri, 25 Oct 2019 02:42:33 +0000</pubDate><guid>https://chantsune.github.io/articles/286/</guid><description>画像をリサイズしてから保存、送信するケースが多いのでそのとき用のメモ リサイズ用のエクステンション extension UIImage { func resized(withPercentage percentage: CGFloat) -&amp;gt; UIImage? { let canvas = CGSize(width: size.width * percentage, height: size.height * percentage) return</description></item><item><title>[kotlin] 演算子オーバーロードでちょっとハマったこと</title><link>https://chantsune.github.io/articles/240/</link><pubDate>Thu, 24 Oct 2019 14:46:01 +0000</pubDate><guid>https://chantsune.github.io/articles/240/</guid><description>とある事情から、kotlinで文字列の掛け算(演算子)を実装したくなりました。 kotlinには演算子オーバーロードの機能があるらしいのでそれ</description></item><item><title>[Python] build-in objectに独自のメソッドを追加する禁断の果実</title><link>https://chantsune.github.io/articles/283/</link><pubDate>Wed, 09 Oct 2019 01:14:54 +0000</pubDate><guid>https://chantsune.github.io/articles/283/</guid><description>Pythonはクラスに後からメソッドが追加できる言語です。 class A: pass A().hello() # Traceback (most recent call last): # File &amp;#34;&amp;lt;stdin&amp;gt;&amp;#34;, line 1, in &amp;lt;module&amp;gt; # AttributeError: &amp;#39;A&amp;#39; object has no attribute &amp;#39;hello&amp;#39; def hello(self): print(&amp;#34;hello&amp;#34;) setattr(A,&amp;#39;hello&amp;#39;,hello) A().hello() # hello しかし、それはあく</description></item><item><title>[Django] カスタムコマンドを作成する</title><link>https://chantsune.github.io/articles/188/</link><pubDate>Sun, 29 Sep 2019 11:42:19 +0000</pubDate><guid>https://chantsune.github.io/articles/188/</guid><description>Djangoには独自の管理コマンドを定義する機能が用意されています。 独自コマンド ここで言うDjangoのコマンドとは、 python manage.py runserver などmanage</description></item><item><title>Django Rest Frameworkを使って爆速でAPIドキュメントを作成する</title><link>https://chantsune.github.io/articles/279/</link><pubDate>Sun, 22 Sep 2019 14:56:58 +0000</pubDate><guid>https://chantsune.github.io/articles/279/</guid><description>どこかで見たことがあるタイトルですねー それは置いておいて、今回はDjango Rest Frameworkを利用して超お手軽&amp;amp;便利なAPIドキ</description></item><item><title>Djangoテンプレートでpythonの組み込み関数を利用する</title><link>https://chantsune.github.io/articles/280/</link><pubDate>Sat, 21 Sep 2019 09:00:33 +0000</pubDate><guid>https://chantsune.github.io/articles/280/</guid><description>Djangoテンプレート内でPythonの組み込み関数zip,range,dir,getattrなどの関数を利用できるようにするライブラリの</description></item><item><title>SwiftのStringにPythonのstr型のメソッドを生やす。</title><link>https://chantsune.github.io/articles/274/</link><pubDate>Fri, 13 Sep 2019 16:25:29 +0000</pubDate><guid>https://chantsune.github.io/articles/274/</guid><description>Pythonを普段使いする筆者がSwiftの文字列操作が覚えられそうにないと感じたので、SwiftでPythonと同等の文字列操作ができるラ</description></item><item><title>.aファイルの中身を確認したい(arコマンド)</title><link>https://chantsune.github.io/articles/278/</link><pubDate>Wed, 04 Sep 2019 06:41:47 +0000</pubDate><guid>https://chantsune.github.io/articles/278/</guid><description>書庫(ライブラリ)中のファイルの中身を表示したい ar p libhoge.a libhoge.aの中に含まれるファイルの内容を表示する。 書庫(ライブラリ)中に含まれ</description></item><item><title>[Heroku] .envファイルで環境変数を設定・管理する</title><link>https://chantsune.github.io/articles/277/</link><pubDate>Sun, 01 Sep 2019 06:53:05 +0000</pubDate><guid>https://chantsune.github.io/articles/277/</guid><description>通常、herokuで環境変数を設定管理するには、webのdashboardを利用するかheroku CLIのconfigコマンドを利用します。</description></item><item><title>[Python] パッケージのsetup関数のclassifiersって何書けばいいの？</title><link>https://chantsune.github.io/articles/177/</link><pubDate>Tue, 27 Aug 2019 05:13:50 +0000</pubDate><guid>https://chantsune.github.io/articles/177/</guid><description>pythonのパッケージを公開するときに、setup.pyのsetup関数のclassifiersキーワード引数って何書けばいいの？ clas</description></item><item><title>[c++] ちょっとカッコいい数値の符号判別</title><link>https://chantsune.github.io/articles/275/</link><pubDate>Fri, 23 Aug 2019 05:45:48 +0000</pubDate><guid>https://chantsune.github.io/articles/275/</guid><description>c/c++で数値の符号を判定したい。 頻繁に使うので関数にしたい。 ぱっと思いつく範囲では、 「条件分岐」か「絶対値で除算」するくらいだと思います</description></item><item><title>[kotlin] printやprintlnで表示される内容をカスタマイズする</title><link>https://chantsune.github.io/articles/239/</link><pubDate>Fri, 16 Aug 2019 02:44:21 +0000</pubDate><guid>https://chantsune.github.io/articles/239/</guid><description>kotlinで自分で作ったクラスのprintやprintlnを使った時、表示される内容を独自のものに置き換える方法のメモ class MyClass(arg1:Int) { var member1:Int = arg1 override fun toString()</description></item><item><title>[Swift] コマンドラインからパッケージを作る</title><link>https://chantsune.github.io/articles/234/</link><pubDate>Fri, 09 Aug 2019 14:17:07 +0000</pubDate><guid>https://chantsune.github.io/articles/234/</guid><description>Swiftのパッケージをコマンドラインから作成するときのメモ 環境 Mac OS 10.14.5 Xcode Version 10.2.1 パッケージの初期化 作成したいパッケージの名前のディレクトリを作成</description></item><item><title>Pythonで一部のHTMLタグをエスケープする</title><link>https://chantsune.github.io/articles/237/</link><pubDate>Mon, 05 Aug 2019 16:49:51 +0000</pubDate><guid>https://chantsune.github.io/articles/237/</guid><description>セキュリティーなどの都合で、フォームから送信されてきた文字列の中にHTMLやjavascript,cssの文字列があったらエスケープしたい。</description></item><item><title>[Python] Sphinxでドキュメントを自動生成する</title><link>https://chantsune.github.io/articles/200/</link><pubDate>Wed, 31 Jul 2019 17:45:18 +0000</pubDate><guid>https://chantsune.github.io/articles/200/</guid><description>自分でライブラリなどを作っていると、機能追加のたびにドキュメントも書かなくてはなりません。 そんな手間を少しでも省くためにドキュメントを自動生</description></item><item><title>pod updateが正常に実行できない</title><link>https://chantsune.github.io/articles/236/</link><pubDate>Tue, 16 Jul 2019 11:29:39 +0000</pubDate><guid>https://chantsune.github.io/articles/236/</guid><description>環境 MacOS 10.14.5 CocoaPods 1.7.4 アップデートできない 既存のiOSアプリのプロジェクトのビルドターゲットを少し変更したので改めて、pod updateを実行してみた</description></item><item><title>Swiftでの改行(
)の扱いでハマったこと</title><link>https://chantsune.github.io/articles/235/</link><pubDate>Wed, 10 Jul 2019 02:08:30 +0000</pubDate><guid>https://chantsune.github.io/articles/235/</guid><description>先日、とある事情からSwiftで文字列の処理を書いていました。 その中で盛大にハマった事があったので忘れないようにメモ。 環境 Swift 5.0.1 改行 ここで取り</description></item><item><title>pyenvをアップデートしたらlibexec/pyenv: No such file or directoryとか言われた話</title><link>https://chantsune.github.io/articles/233/</link><pubDate>Tue, 02 Jul 2019 15:17:28 +0000</pubDate><guid>https://chantsune.github.io/articles/233/</guid><description>環境 macOS 10.14.3 pyenv 1.2.11 本題 ある時、気が向いて $ brew upgrade を実行したらpyenvのバージョンが上がった。 その直後、 $ python としたら、 Users/username/.pyenv/shims/python: line 21: /usr/local/Cellar/pyenv/1.2.11/libexec/pyenv: No such file or directory というエラー</description></item><item><title>[python] ループの最後を判定する小技</title><link>https://chantsune.github.io/articles/199/</link><pubDate>Wed, 19 Jun 2019 16:24:00 +0000</pubDate><guid>https://chantsune.github.io/articles/199/</guid><description>ループの最後の一回だけ別の処理がしたい！ なんていうよくある願いを簡単に叶えてくれる、ループの最後の一回を判定する小技のご紹介 最後の一回を取得</description></item><item><title>pythonの論理式が真偽値以外も返す話</title><link>https://chantsune.github.io/articles/183/</link><pubDate>Wed, 19 Jun 2019 04:11:28 +0000</pubDate><guid>https://chantsune.github.io/articles/183/</guid><description>論理式が真偽値以外の結果を返却してくる不思議な構文のお話です。 何が入っているでしょう？ 早速ですが、次のプログラムを実行したときvalueには</description></item><item><title>[Python]クラスってなんだろう</title><link>https://chantsune.github.io/articles/191/</link><pubDate>Sat, 08 Jun 2019 15:48:18 +0000</pubDate><guid>https://chantsune.github.io/articles/191/</guid><description>最近よく耳にするオブジェクト指向プログラミング オブジェクトって何？それメリットあんの？ そう思う方も多いことでしょう。 Python3を利用する</description></item><item><title>[python] ファイルに直接printする</title><link>https://chantsune.github.io/articles/196/</link><pubDate>Sat, 08 Jun 2019 00:14:22 +0000</pubDate><guid>https://chantsune.github.io/articles/196/</guid><description>print関数の出力先を標準エラー出力やファイルなど、いろんな場所に切り替える小ネタの紹介 print関数 皆さんご存知のprint関数でござい</description></item><item><title>Pythonのプライベートメンバは実はブライベートじゃない</title><link>https://chantsune.github.io/articles/194/</link><pubDate>Fri, 31 May 2019 07:52:52 +0000</pubDate><guid>https://chantsune.github.io/articles/194/</guid><description>Pythonのクラスでプライベートメンバを表現するときにメンバ名の先頭に__(アンダースコア*2)を利用しますが、実は全然プライベートじゃな</description></item><item><title>[c/c++] 実行時にバイトオーダを調べる</title><link>https://chantsune.github.io/articles/193/</link><pubDate>Thu, 30 May 2019 02:10:50 +0000</pubDate><guid>https://chantsune.github.io/articles/193/</guid><description>バイトオーダーを考慮してプログラムを組む必要があるときに超お手軽にバイトオーダーを判定する関数の作り方 #include &amp;lt;stdio.h&amp;gt; int islittle(void) { unsigned i = 1; return *((char *)&amp;amp;i); } int main(int argc, char const *argv[])</description></item><item><title>pythonの変数のスコープってどこからどこまで？</title><link>https://chantsune.github.io/articles/181/</link><pubDate>Wed, 29 May 2019 06:21:49 +0000</pubDate><guid>https://chantsune.github.io/articles/181/</guid><description>新しくプログラミング言語を始めると気になってくるのが変数のスコープです。 どこからどこまでが有効なのか知っていて損をすることはまずありません。</description></item><item><title>Pythonの文字列の掛け算が気持ち悪い</title><link>https://chantsune.github.io/articles/190/</link><pubDate>Tue, 28 May 2019 08:00:54 +0000</pubDate><guid>https://chantsune.github.io/articles/190/</guid><description>Pythonは文字列の掛け算ができることは以前から知っていたのですが、つい前日衝撃的な文法に遭遇した時の話です。 str*int(文字列×整数</description></item><item><title>Django-Boost日本語ドキュメント</title><link>https://chantsune.github.io/articles/179/</link><pubDate>Fri, 24 May 2019 15:33:31 +0000</pubDate><guid>https://chantsune.github.io/articles/179/</guid><description>GitHub https://github.com/ChanTsune/django-boost django-boost: version 1.0 インストール pip install django-boost pipを用いてインストールするかまたは、 git clone https://github.com/ChanTsune/Django-Boost.git python setup.py install GitHubから直接クローンしてもインストール出来ます。 アプ</description></item><item><title>[OCaml] 独自の演算子を定義する</title><link>https://chantsune.github.io/articles/185/</link><pubDate>Sun, 19 May 2019 03:06:13 +0000</pubDate><guid>https://chantsune.github.io/articles/185/</guid><description>OCamlでは演算子をカスタマイズできます。 そんなOCamlでの独自演算子(利用者定義演算子)の定義の方法です。 定義する 特に難しいことはあり</description></item><item><title>[Python] クラスの継承関係を確認する</title><link>https://chantsune.github.io/articles/184/</link><pubDate>Tue, 14 May 2019 05:20:33 +0000</pubDate><guid>https://chantsune.github.io/articles/184/</guid><description>Pythonでクラスの継承関係を確認する方法のメモ。 Pythonでクラスの継承関係を確認する方法は大きく分けると二つくらいになると思います。</description></item><item><title>[python] pypiへのライブラリ公開手順</title><link>https://chantsune.github.io/articles/180/</link><pubDate>Tue, 07 May 2019 10:52:40 +0000</pubDate><guid>https://chantsune.github.io/articles/180/</guid><description>Pythonのライブラリをリリースしたのでその時の手順を簡単にまとめてみました。 パッケージの公開手順に焦点を当てたいので、今回はパッケージの</description></item><item><title>pythonの比較演算の不思議な挙動</title><link>https://chantsune.github.io/articles/182/</link><pubDate>Tue, 30 Apr 2019 08:13:56 +0000</pubDate><guid>https://chantsune.github.io/articles/182/</guid><description>三項を利用した比較演算 pythonで以下の比較演算の結果はどうなると思いますか？ a = 12 b = 12.5 c = True a &amp;gt; b == c これは多くの皆さんの予想通りの結</description></item><item><title>[Django] リダイレクト時のステータスコードを307、308にする</title><link>https://chantsune.github.io/articles/161/</link><pubDate>Fri, 26 Apr 2019 16:34:22 +0000</pubDate><guid>https://chantsune.github.io/articles/161/</guid><description>Djangoではリダイレクトを意味するステータスコードは旧来の301、302が採用されているので、これを新しいステータスコードに置き換える方</description></item><item><title>[Mac] sudoコマンドの認証をTouch IDにする</title><link>https://chantsune.github.io/articles/178/</link><pubDate>Tue, 16 Apr 2019 14:09:30 +0000</pubDate><guid>https://chantsune.github.io/articles/178/</guid><description>せっかくTouch Bar付きのMac Bookを買ったんだからTouch IDを有効に活用したい！ というわけで、sudoコマンドの認証をTouc</description></item><item><title>django-debug-toolbarが動かない</title><link>https://chantsune.github.io/articles/122/</link><pubDate>Wed, 03 Apr 2019 09:52:02 +0000</pubDate><guid>https://chantsune.github.io/articles/122/</guid><description>django-debug-toolbarを導入してみたところ「サイドバーは表示されるにも関わらず、パネルをクリックした際、表示されるはずの詳</description></item><item><title>[Django] httpのアクセスをhttpsにリダイレクトさせる</title><link>https://chantsune.github.io/articles/176/</link><pubDate>Sat, 30 Mar 2019 06:14:52 +0000</pubDate><guid>https://chantsune.github.io/articles/176/</guid><description>Djangoで作ったウェブアプリに対して、 httpできたアクセス全てをhttpsに変える設定の仕方です。 httpsに対応させたらhttpのア</description></item><item><title>MacのPythonで対話コンソールの履歴が遡れない</title><link>https://chantsune.github.io/articles/175/</link><pubDate>Sat, 23 Mar 2019 07:11:34 +0000</pubDate><guid>https://chantsune.github.io/articles/175/</guid><description>pyenvでpythonの環境を構築していたのですがある時から、対話コンソールで上下キーを押しても直前に打ったコマンドの履歴を遡れなくなって</description></item><item><title>Django開発の必須パッケージ、django-debug-toolbarの導入</title><link>https://chantsune.github.io/articles/121/</link><pubDate>Wed, 13 Mar 2019 06:40:36 +0000</pubDate><guid>https://chantsune.github.io/articles/121/</guid><description>もはや、djangoで開発を行うなら欠かせないと言っても過言ではないdjango-debug-toolbarのご紹介 django-debug-toolbar ページの表示速度や、S</description></item><item><title>[python] Macにpygraphvizをインストールする</title><link>https://chantsune.github.io/articles/174/</link><pubDate>Wed, 13 Mar 2019 06:30:07 +0000</pubDate><guid>https://chantsune.github.io/articles/174/</guid><description>Django-extentionsにはモデルをグラフィカルに表示できる機能があると耳にして、実際にやってみたら、pygraphvizをインス</description></item><item><title>[Django] django-environで環境変数を管理してみる</title><link>https://chantsune.github.io/articles/172/</link><pubDate>Sun, 03 Mar 2019 08:30:57 +0000</pubDate><guid>https://chantsune.github.io/articles/172/</guid><description>Djangoでプロジェクトを作っているとAPI-KEYなどの外部に漏れると問題のある情報を扱う場面が登場すると思います。 外部に漏れると困る情</description></item><item><title>ラズパイゼロにpyenvでpythonの環境構築する話</title><link>https://chantsune.github.io/articles/171/</link><pubDate>Mon, 25 Feb 2019 11:13:15 +0000</pubDate><guid>https://chantsune.github.io/articles/171/</guid><description>どこのご家庭にも一個や二個は余っている(？)ラズパイが自宅にもあったので、とりあえずPythonの環境を作るかってことでpyenvを使って環</description></item><item><title>[Django] フォームでログイン認証の時と同じようにnext=URLが使えるようにする</title><link>https://chantsune.github.io/articles/169/</link><pubDate>Sat, 09 Feb 2019 09:01:57 +0000</pubDate><guid>https://chantsune.github.io/articles/169/</guid><description>Djangoのログイン認証時に?next=URLを付けるとそのURLにリダイレクトさせることができることを知っている人は多いことでしょう。 そ</description></item><item><title>[Django] テンプレート内でお手軽にrange関数を利用する</title><link>https://chantsune.github.io/articles/168/</link><pubDate>Tue, 05 Feb 2019 06:59:10 +0000</pubDate><guid>https://chantsune.github.io/articles/168/</guid><description>Djangoテンプレートを書いているとテンプレート内でrange関数が使いたくなることがよくあります。 そんな時にお手軽にrange関数っぽい</description></item><item><title>[Django] RedirectViewについて詳しく見てみる</title><link>https://chantsune.github.io/articles/120/</link><pubDate>Thu, 31 Jan 2019 07:51:57 +0000</pubDate><guid>https://chantsune.github.io/articles/120/</guid><description>以前TemplateViewについて詳しく見てみたわけですが、今度はRedirectViewについて見てみたいと思います。 Django(GitHub) https://github.com/django/django RedirectView Redire</description></item><item><title>[Python] パッケージの依存関係を調べる</title><link>https://chantsune.github.io/articles/167/</link><pubDate>Thu, 31 Jan 2019 07:17:52 +0000</pubDate><guid>https://chantsune.github.io/articles/167/</guid><description>Pythonで開発をしていると何かとお世話になるパッケージ達 pipコマンドで簡単にインストールできるだけあって何かといっぱい入れてしまいがち</description></item><item><title>[Django] related_nameとは何者か</title><link>https://chantsune.github.io/articles/166/</link><pubDate>Sat, 26 Jan 2019 08:51:40 +0000</pubDate><guid>https://chantsune.github.io/articles/166/</guid><description>Djangoでモデルを定義するときに、外部キー(ForeignKey)にrelated_nameを指定することができますが、これは一体何を指</description></item><item><title>UNIXプログラミング入門~プロセス編(3/4)~</title><link>https://chantsune.github.io/articles/165/</link><pubDate>Wed, 16 Jan 2019 08:32:34 +0000</pubDate><guid>https://chantsune.github.io/articles/165/</guid><description>c/c++でunix系osプログラミングを行うときに使うunistd.hやその周辺のライブラリのお話その5です。 このメモでは、プロセス周りの</description></item><item><title>UNIXプログラミング入門~プロセス編(2/4)~</title><link>https://chantsune.github.io/articles/163/</link><pubDate>Sat, 12 Jan 2019 08:16:05 +0000</pubDate><guid>https://chantsune.github.io/articles/163/</guid><description>c/c++でunix系osプログラミングを行うときに使うunistd.hやその周辺のライブラリのお話その4です。 このメモでは、プロセス周りの</description></item><item><title>UNIXプログラミング入門~プロセス編(1/4)~</title><link>https://chantsune.github.io/articles/162/</link><pubDate>Fri, 11 Jan 2019 14:02:47 +0000</pubDate><guid>https://chantsune.github.io/articles/162/</guid><description>c/c++でunix系osプログラミングを行うときに使うunistd.hやその周辺のライブラリのお話その３です。 このメモでは、プロセス周りの</description></item><item><title>[ssh] gitlabで複数アカウントでsshを利用できるようにする</title><link>https://chantsune.github.io/articles/164/</link><pubDate>Wed, 09 Jan 2019 14:02:09 +0000</pubDate><guid>https://chantsune.github.io/articles/164/</guid><description>複数のgitlabアカウントでsshを利用しようと思うとssh-keyをアカウントごとに作らねばなりません 同じssh-keyを登録しようとす</description></item><item><title>UNIXプログラミング入門~ファイル編(2/2)~</title><link>https://chantsune.github.io/articles/128/</link><pubDate>Fri, 04 Jan 2019 05:08:11 +0000</pubDate><guid>https://chantsune.github.io/articles/128/</guid><description>c/c++でunix系osプログラミングを行うときに使うunistd.hやその周辺のライブラリのお話その２です。 このメモでは、ファイルの入出</description></item><item><title>UNIXプログラミング入門~ファイル編(1/2)~</title><link>https://chantsune.github.io/articles/127/</link><pubDate>Thu, 03 Jan 2019 07:42:50 +0000</pubDate><guid>https://chantsune.github.io/articles/127/</guid><description>c/c++でunix系osプログラミングを行うときに使うunistd.hやその周辺のライブラリのお話です。 このメモでは、ファイルの入出力に関</description></item><item><title>[Gitlab] issue,merge requestのテンプレートを作る</title><link>https://chantsune.github.io/articles/86/</link><pubDate>Thu, 27 Dec 2018 14:59:29 +0000</pubDate><guid>https://chantsune.github.io/articles/86/</guid><description>Gitlabではissue,merge requestの雛型(テンプレート)を作ることができます。 テンプレートを作成しておくことで、issue</description></item><item><title>[Django] ユーザー登録とログインを同時に行う</title><link>https://chantsune.github.io/articles/123/</link><pubDate>Wed, 26 Dec 2018 14:55:04 +0000</pubDate><guid>https://chantsune.github.io/articles/123/</guid><description>Djangoでのユーザー登録完了と同時にログイン状態にする方法をメモ 自動的にログインしない場合の実装(ユーザー登録のみ) from django.contrib.auth.forms import UserCreationForm from django.urls import reverse_lazy from django.views.generic</description></item><item><title>[Django] TemplateViewについて詳しく見てみる</title><link>https://chantsune.github.io/articles/85/</link><pubDate>Fri, 21 Dec 2018 08:47:05 +0000</pubDate><guid>https://chantsune.github.io/articles/85/</guid><description>Djangoでクラスベースビューを利用するときにまず、最初に使うことになるのがTemplateViewだと思うのですが、今回はこのTempl</description></item><item><title>buttonタグではなくaタグでPOSTする方法</title><link>https://chantsune.github.io/articles/87/</link><pubDate>Wed, 19 Dec 2018 05:47:56 +0000</pubDate><guid>https://chantsune.github.io/articles/87/</guid><description>デザインの都合でbuttonタグではなく、aタグを利用したい場合があります。 そんなときに使える方法を残しておきます。 aタグでPOSTする方法</description></item><item><title>fabric.jsでお絵かきしよう</title><link>https://chantsune.github.io/articles/84/</link><pubDate>Tue, 11 Dec 2018 13:50:49 +0000</pubDate><guid>https://chantsune.github.io/articles/84/</guid><description>ブラウザ上でお絵かきしたい！ そんな時に便利な**「fabric.js」**というライブラリのご紹介。 PCでもスマートフォンでも利用できます。</description></item><item><title>[Django] すべてのテンプレートで共通の変数を扱う方法3パターン</title><link>https://chantsune.github.io/articles/81/</link><pubDate>Mon, 03 Dec 2018 13:13:59 +0000</pubDate><guid>https://chantsune.github.io/articles/81/</guid><description>Djangoで開発しているとすべてのページで同じ変数を利用したい場合って出てきますよね。 そんな時に覚えておくと楽に記述ができるかもしれない方</description></item><item><title>HerokuでDjangoを使うときに外部からパッケージをインストールする</title><link>https://chantsune.github.io/articles/79/</link><pubDate>Sun, 02 Dec 2018 14:08:03 +0000</pubDate><guid>https://chantsune.github.io/articles/79/</guid><description>簡単にウェブアプリをデプロイできるwebサービスにHerokuがあります。 通常、Herokuはサーバーへのパッケージをインストールはpipが</description></item><item><title>[heroku] libSM.so.6のインポートエラーの解決法</title><link>https://chantsune.github.io/articles/80/</link><pubDate>Sun, 25 Nov 2018 07:02:13 +0000</pubDate><guid>https://chantsune.github.io/articles/80/</guid><description>heroku に OpenCV を利用した Django アプリをデプロイしたら ImportError: libSM.so.6: cannot open shared object file: No such file or directory というエラーを吐かれた。 どうにも中で使っているOpenCV(opencv-p</description></item><item><title>[Django] Bootstrapを利用したwebデザイン</title><link>https://chantsune.github.io/articles/78/</link><pubDate>Fri, 23 Nov 2018 01:11:26 +0000</pubDate><guid>https://chantsune.github.io/articles/78/</guid><description>Djangoでブログを作る-最終回-です。 シリーズ一覧 プロジェクトの作成とアプリケーションの作成 view関数の書き方 URLの指定の仕方(UR</description></item><item><title>[Django] コメント機能の追加</title><link>https://chantsune.github.io/articles/77/</link><pubDate>Thu, 22 Nov 2018 00:19:25 +0000</pubDate><guid>https://chantsune.github.io/articles/77/</guid><description>この連続企画も今回も含めて残り二回となりました。 今回は、記事に対するコメントができる機能を実装します。 シリーズ一覧 プロジェクトの作成とアプリ</description></item><item><title>[Django] いいね機能の追加</title><link>https://chantsune.github.io/articles/75/</link><pubDate>Tue, 20 Nov 2018 15:47:28 +0000</pubDate><guid>https://chantsune.github.io/articles/75/</guid><description>前回までにブログの基本的な機能を作成しました。 今回は、いいね機能を実装してみたいと思います。 シリーズ一覧 プロジェクトの作成とアプリケーション</description></item><item><title>[Django] 記事の編集ページと記事の削除機能の追加</title><link>https://chantsune.github.io/articles/74/</link><pubDate>Mon, 19 Nov 2018 12:17:55 +0000</pubDate><guid>https://chantsune.github.io/articles/74/</guid><description>前回、基本的な機能は実装できたので今回は、記事の編集機能と削除機能を実装します。 シリーズ一覧 プロジェクトの作成とアプリケーションの作成 vie</description></item><item><title>[Django] 記事の一覧ページと詳細ページの追加</title><link>https://chantsune.github.io/articles/73/</link><pubDate>Sat, 17 Nov 2018 16:05:35 +0000</pubDate><guid>https://chantsune.github.io/articles/73/</guid><description>前回、記事を投稿できるようになったので、今回は投稿した記事を見られるようにしたいと思います。 シリーズ一覧 プロジェクトの作成とアプリケーション</description></item><item><title>[Django] 2系から導入されたパスコンバータとは</title><link>https://chantsune.github.io/articles/76/</link><pubDate>Fri, 16 Nov 2018 05:06:26 +0000</pubDate><guid>https://chantsune.github.io/articles/76/</guid><description>Djangoの2系からは新たにパスコンバータと呼ばれる機能が追加されました。 パスコンバータとは Django1系ではURLのルーティングを正規</description></item><item><title>[Django] 記事の投稿ページの作成</title><link>https://chantsune.github.io/articles/72/</link><pubDate>Thu, 15 Nov 2018 10:13:59 +0000</pubDate><guid>https://chantsune.github.io/articles/72/</guid><description>前回 データベースの構築を行ったのでいよいよ本格的にブログの機能を作っていきます。 今回は、ブログ記事の投稿ページを作ろうと思います。 シリーズ一</description></item><item><title>[Django] データベース(モデル)の設定</title><link>https://chantsune.github.io/articles/71/</link><pubDate>Wed, 14 Nov 2018 03:13:23 +0000</pubDate><guid>https://chantsune.github.io/articles/71/</guid><description>前回までにビューとURLディスパッチャの設定を行ったので今回はデータベース(モデル)の設定をしたいと思います。 シリーズ一覧 プロジェクトの作成</description></item><item><title>[Django] URLの指定の仕方(URLディスパッチャ)</title><link>https://chantsune.github.io/articles/70/</link><pubDate>Mon, 12 Nov 2018 23:26:01 +0000</pubDate><guid>https://chantsune.github.io/articles/70/</guid><description>第三回になりました。 今回はDjangoのURLの指定の仕方を説明したいと思います。 シリーズ一覧 プロジェクトの作成とアプリケーションの作成 vi</description></item><item><title>[Django] view関数の書き方</title><link>https://chantsune.github.io/articles/69/</link><pubDate>Sun, 11 Nov 2018 05:33:14 +0000</pubDate><guid>https://chantsune.github.io/articles/69/</guid><description>Djangoのビューには現在、関数ベースとクラスベースの2種類の書き方があります。 Djangoはクラスベースのビューを推奨しているようですが</description></item><item><title>PNGイメージのデータ構造を知ってみる(1)</title><link>https://chantsune.github.io/articles/27/</link><pubDate>Sat, 10 Nov 2018 09:15:48 +0000</pubDate><guid>https://chantsune.github.io/articles/27/</guid><description>PNG(Portable Network Graphics)イメージのデータ構造がどうなっているのか調べてみた。 基本的なデータ構造 PNGイメージは最初の8バイトを除いてチャンクと</description></item><item><title>[Django] プロジェクトの作成とアプリケーションの作成</title><link>https://chantsune.github.io/articles/68/</link><pubDate>Fri, 09 Nov 2018 09:30:03 +0000</pubDate><guid>https://chantsune.github.io/articles/68/</guid><description>Djangoで新しくプロジェクトを作るときに必要な操作をまとめました。 数回に分けて実際に動くブログを作る事を目標にします。 シリーズ一覧 プロジ</description></item><item><title>これだけは知っておきたいDjangoテンプレートの基本文法</title><link>https://chantsune.github.io/articles/67/</link><pubDate>Tue, 30 Oct 2018 05:30:27 +0000</pubDate><guid>https://chantsune.github.io/articles/67/</guid><description>Djangoには便利な「テンプレート」と呼ばれる機能があります。 この機能を利用することで、webページの重複部分を繰り返して書く必要がなくな</description></item><item><title>pytorchで機械学習(導入編)</title><link>https://chantsune.github.io/articles/66/</link><pubDate>Tue, 30 Oct 2018 01:33:12 +0000</pubDate><guid>https://chantsune.github.io/articles/66/</guid><description>唐突に機械学習がやりたくなったのでpytorchで遊んでみることにした。 pytorchとは pytorchはchainerからforkされた機</description></item><item><title>ページ内リンクにスクロールアニメーションをつける</title><link>https://chantsune.github.io/articles/64/</link><pubDate>Thu, 25 Oct 2018 04:13:28 +0000</pubDate><guid>https://chantsune.github.io/articles/64/</guid><description>最近ではもはや当然のページ内リンクをクリックするとスルスルーっと移動するアニメーションの実装の仕方を紹介しようと思います。 HTML &amp;lt;a href=&amp;#</description></item><item><title>[Django] ログイン必須のページを作る</title><link>https://chantsune.github.io/articles/62/</link><pubDate>Tue, 23 Oct 2018 00:38:55 +0000</pubDate><guid>https://chantsune.github.io/articles/62/</guid><description>前回、ログイン機能を実装してみましたが、今度はログインした人専用(ログイン必須)のページを作ってみましょう。 関数ベースのビューの場合 関数ベー</description></item><item><title>[Django] テンプレートで文字を切り詰めたい</title><link>https://chantsune.github.io/articles/63/</link><pubDate>Mon, 22 Oct 2018 04:08:03 +0000</pubDate><guid>https://chantsune.github.io/articles/63/</guid><description>最近のwebデザインでカード内に本文がちょっとだけ載っているデザインをよく目にします。 Djangoでも同じように表示させたいという願望のもと</description></item><item><title>[Django] 404ページをカスタマイズする</title><link>https://chantsune.github.io/articles/61/</link><pubDate>Sun, 21 Oct 2018 06:36:02 +0000</pubDate><guid>https://chantsune.github.io/articles/61/</guid><description>Djangoで存在しないURLにアクセスすると以下のような404ページが表示されます。 デバックモード 本番モード 通常はデバックモードでサイトの</description></item><item><title>Djangoで使えるフィールド一覧</title><link>https://chantsune.github.io/articles/60/</link><pubDate>Fri, 19 Oct 2018 02:45:53 +0000</pubDate><guid>https://chantsune.github.io/articles/60/</guid><description>Djangoのモデルには色々なフィールドの型が用意されています。 適切に利用することで効率的で読みやすいデータベースにする事を心掛けましょう。</description></item><item><title>Djangoのfilterを自作してみる</title><link>https://chantsune.github.io/articles/22/</link><pubDate>Thu, 18 Oct 2018 04:33:25 +0000</pubDate><guid>https://chantsune.github.io/articles/22/</guid><description>Djangoには便利なフィルターが多数用意されていますが、自分の使いたい機能が足りないと思うこともあります。 **無いなら作ればいいじゃないか</description></item><item><title>c++にpythonのような強力な文字列操作を！</title><link>https://chantsune.github.io/articles/24/</link><pubDate>Tue, 16 Oct 2018 22:37:05 +0000</pubDate><guid>https://chantsune.github.io/articles/24/</guid><description>自分はpythonをよく利用するのですが、pythonは文字列操作が割と強力な印象を受けます(特にスライス) 普段使いのC++でもpython</description></item><item><title>gfm(GitHub Flavored Markdown)でシンタックスハイライト出来る言語一覧</title><link>https://chantsune.github.io/articles/25/</link><pubDate>Mon, 15 Oct 2018 23:40:29 +0000</pubDate><guid>https://chantsune.github.io/articles/25/</guid><description>2018/10/16時点で https://github.com/github/linguist/blob/master/lib/linguist/languages.yml に載っている内容を一覧表にしました。 識別子は ```識別子&amp;lt;-ここに書く名前のことです。 なお、大文字小文字の</description></item><item><title>Pythonのisって何、==と違うの？</title><link>https://chantsune.github.io/articles/23/</link><pubDate>Mon, 15 Oct 2018 04:55:27 +0000</pubDate><guid>https://chantsune.github.io/articles/23/</guid><description>Pythonでたまに見かけるisって何ですか？ ==とはどう違うんですか？ ==の働き ==はオブジェクト同士が等価であるかを判定する演算子です。</description></item><item><title>pythonで実行時にコンソールを表示させない方法</title><link>https://chantsune.github.io/articles/26/</link><pubDate>Sun, 14 Oct 2018 09:07:07 +0000</pubDate><guid>https://chantsune.github.io/articles/26/</guid><description>pythonでTkinterやwxPythonなどを利用してGUIプログラミングをしているとあの黒い画面が邪魔な時がありますよね。 実はあれ超</description></item><item><title>[Django]知ってると便利なforで使える小技</title><link>https://chantsune.github.io/articles/20/</link><pubDate>Sat, 13 Oct 2018 03:23:18 +0000</pubDate><guid>https://chantsune.github.io/articles/20/</guid><description>Djangoのtemplate内で利用するfor文で知ってるとテンプレートがすっきり書けるかもしれない小技の紹介 まずはシンプルに &amp;quot;values&amp;quot;:[&amp;quot;A&amp;quot;,&amp;quot;B&amp;quot;,&amp;quot;C&amp;quot;] {% for value in values</description></item><item><title>Pythonで偽と判定される値</title><link>https://chantsune.github.io/articles/21/</link><pubDate>Fri, 12 Oct 2018 13:25:02 +0000</pubDate><guid>https://chantsune.github.io/articles/21/</guid><description>pythonではどのようなオブジェクトでも、真理値(Boolean)として判定することができ、if や while の条件として使えます。 偽と定義されてい</description></item><item><title>Djangoでログイン機能を作る</title><link>https://chantsune.github.io/articles/19/</link><pubDate>Thu, 11 Oct 2018 09:30:40 +0000</pubDate><guid>https://chantsune.github.io/articles/19/</guid><description>今回はDjangoにもともと用意されている機能だけでログイン機能(ユーザー認証)を実装してみようと思います。 環境 python 3.6.3 Django 2.0.8 プロジェクトの作成 ま</description></item><item><title>Djangoのtemplateでifをすっきり書いてみる(yesnoフィルター)</title><link>https://chantsune.github.io/articles/18/</link><pubDate>Thu, 11 Oct 2018 02:43:55 +0000</pubDate><guid>https://chantsune.github.io/articles/18/</guid><description>Djangoで開発を続けていくうちにだんだんとtemplateが複雑になり読みづらくなることがあります。 なので今回はちょっとでもtempla</description></item><item><title>pythonのdatetimeクラスで取得できる日付フォーマット色々</title><link>https://chantsune.github.io/articles/17/</link><pubDate>Wed, 10 Oct 2018 13:40:06 +0000</pubDate><guid>https://chantsune.github.io/articles/17/</guid><description>最近、時間を管理するプログラムを作ったのでその時のメモ datetimeクラスってどうやって使うの？ 標準モジュールなのでimportするだけで</description></item><item><title>ウェブサイトにTwitterシェア機能を付けてみる</title><link>https://chantsune.github.io/articles/16/</link><pubDate>Sun, 07 Oct 2018 09:23:34 +0000</pubDate><guid>https://chantsune.github.io/articles/16/</guid><description>最近はではほとんどのサイトでSNSでシェアするボタンが付いているのを目にします。 というわけで自分のサイトにも実装してみます。 シェアボタン設置</description></item><item><title>pip,condaの基本コマンド</title><link>https://chantsune.github.io/articles/15/</link><pubDate>Thu, 04 Oct 2018 14:47:29 +0000</pubDate><guid>https://chantsune.github.io/articles/15/</guid><description>windowsでのconda,pipの基本的な使い方 pip パッケージのインストール $ pip install パッケージ名 バージョン指定をする場合 $ pip install パッケージ名=</description></item><item><title>heroku CLIで複数のアカウントを管理する</title><link>https://chantsune.github.io/articles/14/</link><pubDate>Thu, 04 Oct 2018 01:55:56 +0000</pubDate><guid>https://chantsune.github.io/articles/14/</guid><description>herokuの無料枠だけで色々やろうと思うと1アカウントに1アプリという形をとることがあると思います。 ただそれだとアプリごとにアカウントを切</description></item><item><title>[Django] DateTimeFieldからUnix時間を取り出す</title><link>https://chantsune.github.io/articles/13/</link><pubDate>Tue, 02 Oct 2018 15:49:49 +0000</pubDate><guid>https://chantsune.github.io/articles/13/</guid><description>やりたいこと DjangoのデータベースのDateTimeFieldからUNIX時間を取り出したい。 UNIX時間とは？ UNIX時間、またはUN</description></item><item><title>Djangoのデータベース操作まとめ</title><link>https://chantsune.github.io/articles/10/</link><pubDate>Mon, 01 Oct 2018 09:46:14 +0000</pubDate><guid>https://chantsune.github.io/articles/10/</guid><description>クエリメソッド（QueryAPI）一覧表 Django v2.0に対応 各メソッドの詳細は公式サイトを参照のこと https://docs.djangoproject.com/ja/2.0/ref/models/querysets/ 大分類 小分類 メソッド 全件取得 all() 検索条件を指</description></item><item><title>HTMLのformに自動保存機能を付けよう</title><link>https://chantsune.github.io/articles/11/</link><pubDate>Mon, 01 Oct 2018 08:56:02 +0000</pubDate><guid>https://chantsune.github.io/articles/11/</guid><description>はじめに なぜ自動保存機能を付けようと思い至ったかと申し上げますと、 先日、30分くらいかけて編集していたメモ(当サイト記事)を更新する時、ネッ</description></item><item><title>Djangoでjsonを送受信する</title><link>https://chantsune.github.io/articles/12/</link><pubDate>Mon, 01 Oct 2018 06:55:38 +0000</pubDate><guid>https://chantsune.github.io/articles/12/</guid><description>Djangoでのjsonの送受信についてメモ、送信はいいけど受信は割と忘れそう。 送信 from django.http.response import JsonResponse def jsonSend(request): json_data = {&amp;#34;data&amp;#34;:{&amp;#34;daat1&amp;#34;:&amp;#34;DATA1&amp;#34;,&amp;#34;data2&amp;#34;:&amp;#34;DATA2&amp;#34;}} return JsonResponse(json_data) jsonを送信するには辞書型のオブ</description></item><item><title>DjangoサーバーでGzip転送を有効にしてみる</title><link>https://chantsune.github.io/articles/9/</link><pubDate>Sat, 29 Sep 2018 09:11:15 +0000</pubDate><guid>https://chantsune.github.io/articles/9/</guid><description>やりたいこと Djangoサーバーで配信するHTML等の要素をGzipで圧縮して利用帯域幅を削減したい。 やってみる 実はDjangoには標準でG</description></item><item><title>markdownをシンタックスハイライト付きでHTMLにしてみる</title><link>https://chantsune.github.io/articles/8/</link><pubDate>Thu, 27 Sep 2018 14:18:49 +0000</pubDate><guid>https://chantsune.github.io/articles/8/</guid><description>やりたいこと このサイトにもコードを張り付けることがあるわけですが、そのままではどうにも見づらい。 というわけで、markdownをシンタックス</description></item><item><title>Bootstrapの「container-fluid」と「container」って結局どう違うの？</title><link>https://chantsune.github.io/articles/7/</link><pubDate>Thu, 27 Sep 2018 13:14:41 +0000</pubDate><guid>https://chantsune.github.io/articles/7/</guid><description>結論 画面の左右に余白をもたせたい場合は「container」 画面いっぱいにコンテンツを表示するなら「container-fluid」 感覚とし</description></item><item><title>Webサイトにマークダウンエディタを組み込む話</title><link>https://chantsune.github.io/articles/6/</link><pubDate>Thu, 27 Sep 2018 11:11:59 +0000</pubDate><guid>https://chantsune.github.io/articles/6/</guid><description>このサイトのメモの内容はマークダウンで書き込んでいるのですが、 何件か書き込んだあたりで「普通のフォームだと書きづらい」、「編集しながらどんな</description></item><item><title>pythonでmarkdownをHTMLに変換する</title><link>https://chantsune.github.io/articles/5/</link><pubDate>Thu, 27 Sep 2018 09:52:15 +0000</pubDate><guid>https://chantsune.github.io/articles/5/</guid><description>超簡単 pip install markdown でインストールして import markdown as md html = md.markdown(&amp;#34;#markdown&amp;#34;) これだけ 一応拡張機能でシンタックスハイライト対応もできるみたいだけど今回は割愛。 気が向いたら追記</description></item><item><title>Djangoで作ったアプリをherokuにデプロイする時の一連の流れ</title><link>https://chantsune.github.io/articles/4/</link><pubDate>Thu, 27 Sep 2018 01:06:13 +0000</pubDate><guid>https://chantsune.github.io/articles/4/</guid><description>このサイト自体を公開する時に行った作業の一連の流れです。 前提 ・python3及びDjangoについて基本的な知識がある事 ・Djangoで既に</description></item><item><title>Heroku CLIのコマンドまとめ</title><link>https://chantsune.github.io/articles/3/</link><pubDate>Thu, 27 Sep 2018 00:55:19 +0000</pubDate><guid>https://chantsune.github.io/articles/3/</guid><description>よく使う Heroku CLIのコマンド 一度設定してしまうとあまり使わないので忘れないためにメモ ログインとログアウト heroku login heroku CLIでプロジェクトに関する操作</description></item><item><title>Pythonでの三項演算子</title><link>https://chantsune.github.io/articles/2/</link><pubDate>Thu, 27 Sep 2018 00:25:43 +0000</pubDate><guid>https://chantsune.github.io/articles/2/</guid><description>三項演算子を使うことで代入の条件分岐を一行でスマートに記述することができます。 用法 (変数) = (条件がTrueのときの値) if (条件) else (条件が</description></item></channel></rss>