<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>python on エンジニアもどきの技術メモ</title><link>https://chantsune.github.io/tags/python/</link><description>Recent content in python on エンジニアもどきの技術メモ</description><generator>Hugo -- gohugo.io</generator><language>ja</language><lastBuildDate>Tue, 11 Feb 2020 09:54:36 +0000</lastBuildDate><atom:link href="https://chantsune.github.io/tags/python/index.xml" rel="self" type="application/rss+xml"/><item><title>[Django] Http Headerを取得、追加する方法</title><link>https://chantsune.github.io/articles/83/</link><pubDate>Tue, 11 Feb 2020 09:54:36 +0000</pubDate><guid>https://chantsune.github.io/articles/83/</guid><description>Djangoでリクエストヘッダやレスポンスヘッダを操作する方法のご紹介 基本 リクエストヘッダはHttpRequestのMETA属性、レスポンス</description></item><item><title>django-herokuがインストール出来ない</title><link>https://chantsune.github.io/articles/197/</link><pubDate>Thu, 06 Feb 2020 09:21:03 +0000</pubDate><guid>https://chantsune.github.io/articles/197/</guid><description>pipでdjango-herokuをインストールしようとするとdjango-herokuが依存しているpsycopg2がコンパイルにコケてイ</description></item><item><title>[python] pipでGitHubのコードを直接インストールする</title><link>https://chantsune.github.io/articles/293/</link><pubDate>Wed, 29 Jan 2020 18:04:15 +0000</pubDate><guid>https://chantsune.github.io/articles/293/</guid><description>人の作ったライブラリをフォークして改良したり、まだpypiにホストされていない最新のコードを利用したかったりする場合に、Githubから直接</description></item><item><title>[Python] build-in objectに独自のメソッドを追加する禁断の果実</title><link>https://chantsune.github.io/articles/283/</link><pubDate>Wed, 09 Oct 2019 01:14:54 +0000</pubDate><guid>https://chantsune.github.io/articles/283/</guid><description>Pythonはクラスに後からメソッドが追加できる言語です。 class A: pass A().hello() # Traceback (most recent call last): # File &amp;#34;&amp;lt;stdin&amp;gt;&amp;#34;, line 1, in &amp;lt;module&amp;gt; # AttributeError: &amp;#39;A&amp;#39; object has no attribute &amp;#39;hello&amp;#39; def hello(self): print(&amp;#34;hello&amp;#34;) setattr(A,&amp;#39;hello&amp;#39;,hello) A().hello() # hello しかし、それはあく</description></item><item><title>Django Rest Frameworkを使って爆速でAPIドキュメントを作成する</title><link>https://chantsune.github.io/articles/279/</link><pubDate>Sun, 22 Sep 2019 14:56:58 +0000</pubDate><guid>https://chantsune.github.io/articles/279/</guid><description>どこかで見たことがあるタイトルですねー それは置いておいて、今回はDjango Rest Frameworkを利用して超お手軽&amp;amp;便利なAPIドキ</description></item><item><title>SwiftのStringにPythonのstr型のメソッドを生やす。</title><link>https://chantsune.github.io/articles/274/</link><pubDate>Fri, 13 Sep 2019 16:25:29 +0000</pubDate><guid>https://chantsune.github.io/articles/274/</guid><description>Pythonを普段使いする筆者がSwiftの文字列操作が覚えられそうにないと感じたので、SwiftでPythonと同等の文字列操作ができるラ</description></item><item><title>[Python] パッケージのsetup関数のclassifiersって何書けばいいの？</title><link>https://chantsune.github.io/articles/177/</link><pubDate>Tue, 27 Aug 2019 05:13:50 +0000</pubDate><guid>https://chantsune.github.io/articles/177/</guid><description>pythonのパッケージを公開するときに、setup.pyのsetup関数のclassifiersキーワード引数って何書けばいいの？ clas</description></item><item><title>Pythonで一部のHTMLタグをエスケープする</title><link>https://chantsune.github.io/articles/237/</link><pubDate>Mon, 05 Aug 2019 16:49:51 +0000</pubDate><guid>https://chantsune.github.io/articles/237/</guid><description>セキュリティーなどの都合で、フォームから送信されてきた文字列の中にHTMLやjavascript,cssの文字列があったらエスケープしたい。</description></item><item><title>[Python] Sphinxでドキュメントを自動生成する</title><link>https://chantsune.github.io/articles/200/</link><pubDate>Wed, 31 Jul 2019 17:45:18 +0000</pubDate><guid>https://chantsune.github.io/articles/200/</guid><description>自分でライブラリなどを作っていると、機能追加のたびにドキュメントも書かなくてはなりません。 そんな手間を少しでも省くためにドキュメントを自動生</description></item><item><title>pyenvをアップデートしたらlibexec/pyenv: No such file or directoryとか言われた話</title><link>https://chantsune.github.io/articles/233/</link><pubDate>Tue, 02 Jul 2019 15:17:28 +0000</pubDate><guid>https://chantsune.github.io/articles/233/</guid><description>環境 macOS 10.14.3 pyenv 1.2.11 本題 ある時、気が向いて $ brew upgrade を実行したらpyenvのバージョンが上がった。 その直後、 $ python としたら、 Users/username/.pyenv/shims/python: line 21: /usr/local/Cellar/pyenv/1.2.11/libexec/pyenv: No such file or directory というエラー</description></item><item><title>[python] ループの最後を判定する小技</title><link>https://chantsune.github.io/articles/199/</link><pubDate>Wed, 19 Jun 2019 16:24:00 +0000</pubDate><guid>https://chantsune.github.io/articles/199/</guid><description>ループの最後の一回だけ別の処理がしたい！ なんていうよくある願いを簡単に叶えてくれる、ループの最後の一回を判定する小技のご紹介 最後の一回を取得</description></item><item><title>pythonの論理式が真偽値以外も返す話</title><link>https://chantsune.github.io/articles/183/</link><pubDate>Wed, 19 Jun 2019 04:11:28 +0000</pubDate><guid>https://chantsune.github.io/articles/183/</guid><description>論理式が真偽値以外の結果を返却してくる不思議な構文のお話です。 何が入っているでしょう？ 早速ですが、次のプログラムを実行したときvalueには</description></item><item><title>[Python]クラスってなんだろう</title><link>https://chantsune.github.io/articles/191/</link><pubDate>Sat, 08 Jun 2019 15:48:18 +0000</pubDate><guid>https://chantsune.github.io/articles/191/</guid><description>最近よく耳にするオブジェクト指向プログラミング オブジェクトって何？それメリットあんの？ そう思う方も多いことでしょう。 Python3を利用する</description></item><item><title>[python] ファイルに直接printする</title><link>https://chantsune.github.io/articles/196/</link><pubDate>Sat, 08 Jun 2019 00:14:22 +0000</pubDate><guid>https://chantsune.github.io/articles/196/</guid><description>print関数の出力先を標準エラー出力やファイルなど、いろんな場所に切り替える小ネタの紹介 print関数 皆さんご存知のprint関数でござい</description></item><item><title>Pythonのプライベートメンバは実はブライベートじゃない</title><link>https://chantsune.github.io/articles/194/</link><pubDate>Fri, 31 May 2019 07:52:52 +0000</pubDate><guid>https://chantsune.github.io/articles/194/</guid><description>Pythonのクラスでプライベートメンバを表現するときにメンバ名の先頭に__(アンダースコア*2)を利用しますが、実は全然プライベートじゃな</description></item><item><title>pythonの変数のスコープってどこからどこまで？</title><link>https://chantsune.github.io/articles/181/</link><pubDate>Wed, 29 May 2019 06:21:49 +0000</pubDate><guid>https://chantsune.github.io/articles/181/</guid><description>新しくプログラミング言語を始めると気になってくるのが変数のスコープです。 どこからどこまでが有効なのか知っていて損をすることはまずありません。</description></item><item><title>Pythonの文字列の掛け算が気持ち悪い</title><link>https://chantsune.github.io/articles/190/</link><pubDate>Tue, 28 May 2019 08:00:54 +0000</pubDate><guid>https://chantsune.github.io/articles/190/</guid><description>Pythonは文字列の掛け算ができることは以前から知っていたのですが、つい前日衝撃的な文法に遭遇した時の話です。 str*int(文字列×整数</description></item><item><title>[Python] クラスの継承関係を確認する</title><link>https://chantsune.github.io/articles/184/</link><pubDate>Tue, 14 May 2019 05:20:33 +0000</pubDate><guid>https://chantsune.github.io/articles/184/</guid><description>Pythonでクラスの継承関係を確認する方法のメモ。 Pythonでクラスの継承関係を確認する方法は大きく分けると二つくらいになると思います。</description></item><item><title>[python] pypiへのライブラリ公開手順</title><link>https://chantsune.github.io/articles/180/</link><pubDate>Tue, 07 May 2019 10:52:40 +0000</pubDate><guid>https://chantsune.github.io/articles/180/</guid><description>Pythonのライブラリをリリースしたのでその時の手順を簡単にまとめてみました。 パッケージの公開手順に焦点を当てたいので、今回はパッケージの</description></item><item><title>pythonの比較演算の不思議な挙動</title><link>https://chantsune.github.io/articles/182/</link><pubDate>Tue, 30 Apr 2019 08:13:56 +0000</pubDate><guid>https://chantsune.github.io/articles/182/</guid><description>三項を利用した比較演算 pythonで以下の比較演算の結果はどうなると思いますか？ a = 12 b = 12.5 c = True a &amp;gt; b == c これは多くの皆さんの予想通りの結</description></item><item><title>MacのPythonで対話コンソールの履歴が遡れない</title><link>https://chantsune.github.io/articles/175/</link><pubDate>Sat, 23 Mar 2019 07:11:34 +0000</pubDate><guid>https://chantsune.github.io/articles/175/</guid><description>pyenvでpythonの環境を構築していたのですがある時から、対話コンソールで上下キーを押しても直前に打ったコマンドの履歴を遡れなくなって</description></item><item><title>[python] Macにpygraphvizをインストールする</title><link>https://chantsune.github.io/articles/174/</link><pubDate>Wed, 13 Mar 2019 06:30:07 +0000</pubDate><guid>https://chantsune.github.io/articles/174/</guid><description>Django-extentionsにはモデルをグラフィカルに表示できる機能があると耳にして、実際にやってみたら、pygraphvizをインス</description></item><item><title>ラズパイゼロにpyenvでpythonの環境構築する話</title><link>https://chantsune.github.io/articles/171/</link><pubDate>Mon, 25 Feb 2019 11:13:15 +0000</pubDate><guid>https://chantsune.github.io/articles/171/</guid><description>どこのご家庭にも一個や二個は余っている(？)ラズパイが自宅にもあったので、とりあえずPythonの環境を作るかってことでpyenvを使って環</description></item><item><title>[Python] パッケージの依存関係を調べる</title><link>https://chantsune.github.io/articles/167/</link><pubDate>Thu, 31 Jan 2019 07:17:52 +0000</pubDate><guid>https://chantsune.github.io/articles/167/</guid><description>Pythonで開発をしていると何かとお世話になるパッケージ達 pipコマンドで簡単にインストールできるだけあって何かといっぱい入れてしまいがち</description></item><item><title>[heroku] libSM.so.6のインポートエラーの解決法</title><link>https://chantsune.github.io/articles/80/</link><pubDate>Sun, 25 Nov 2018 07:02:13 +0000</pubDate><guid>https://chantsune.github.io/articles/80/</guid><description>heroku に OpenCV を利用した Django アプリをデプロイしたら ImportError: libSM.so.6: cannot open shared object file: No such file or directory というエラーを吐かれた。 どうにも中で使っているOpenCV(opencv-p</description></item><item><title>pytorchで機械学習(導入編)</title><link>https://chantsune.github.io/articles/66/</link><pubDate>Tue, 30 Oct 2018 01:33:12 +0000</pubDate><guid>https://chantsune.github.io/articles/66/</guid><description>唐突に機械学習がやりたくなったのでpytorchで遊んでみることにした。 pytorchとは pytorchはchainerからforkされた機</description></item><item><title>c++にpythonのような強力な文字列操作を！</title><link>https://chantsune.github.io/articles/24/</link><pubDate>Tue, 16 Oct 2018 22:37:05 +0000</pubDate><guid>https://chantsune.github.io/articles/24/</guid><description>自分はpythonをよく利用するのですが、pythonは文字列操作が割と強力な印象を受けます(特にスライス) 普段使いのC++でもpython</description></item><item><title>Pythonのisって何、==と違うの？</title><link>https://chantsune.github.io/articles/23/</link><pubDate>Mon, 15 Oct 2018 04:55:27 +0000</pubDate><guid>https://chantsune.github.io/articles/23/</guid><description>Pythonでたまに見かけるisって何ですか？ ==とはどう違うんですか？ ==の働き ==はオブジェクト同士が等価であるかを判定する演算子です。</description></item><item><title>pythonで実行時にコンソールを表示させない方法</title><link>https://chantsune.github.io/articles/26/</link><pubDate>Sun, 14 Oct 2018 09:07:07 +0000</pubDate><guid>https://chantsune.github.io/articles/26/</guid><description>pythonでTkinterやwxPythonなどを利用してGUIプログラミングをしているとあの黒い画面が邪魔な時がありますよね。 実はあれ超</description></item><item><title>Pythonで偽と判定される値</title><link>https://chantsune.github.io/articles/21/</link><pubDate>Fri, 12 Oct 2018 13:25:02 +0000</pubDate><guid>https://chantsune.github.io/articles/21/</guid><description>pythonではどのようなオブジェクトでも、真理値(Boolean)として判定することができ、if や while の条件として使えます。 偽と定義されてい</description></item><item><title>pythonのdatetimeクラスで取得できる日付フォーマット色々</title><link>https://chantsune.github.io/articles/17/</link><pubDate>Wed, 10 Oct 2018 13:40:06 +0000</pubDate><guid>https://chantsune.github.io/articles/17/</guid><description>最近、時間を管理するプログラムを作ったのでその時のメモ datetimeクラスってどうやって使うの？ 標準モジュールなのでimportするだけで</description></item><item><title>pip,condaの基本コマンド</title><link>https://chantsune.github.io/articles/15/</link><pubDate>Thu, 04 Oct 2018 14:47:29 +0000</pubDate><guid>https://chantsune.github.io/articles/15/</guid><description>windowsでのconda,pipの基本的な使い方 pip パッケージのインストール $ pip install パッケージ名 バージョン指定をする場合 $ pip install パッケージ名=</description></item><item><title>markdownをシンタックスハイライト付きでHTMLにしてみる</title><link>https://chantsune.github.io/articles/8/</link><pubDate>Thu, 27 Sep 2018 14:18:49 +0000</pubDate><guid>https://chantsune.github.io/articles/8/</guid><description>やりたいこと このサイトにもコードを張り付けることがあるわけですが、そのままではどうにも見づらい。 というわけで、markdownをシンタックス</description></item><item><title>pythonでmarkdownをHTMLに変換する</title><link>https://chantsune.github.io/articles/5/</link><pubDate>Thu, 27 Sep 2018 09:52:15 +0000</pubDate><guid>https://chantsune.github.io/articles/5/</guid><description>超簡単 pip install markdown でインストールして import markdown as md html = md.markdown(&amp;#34;#markdown&amp;#34;) これだけ 一応拡張機能でシンタックスハイライト対応もできるみたいだけど今回は割愛。 気が向いたら追記</description></item><item><title>Pythonでの三項演算子</title><link>https://chantsune.github.io/articles/2/</link><pubDate>Thu, 27 Sep 2018 00:25:43 +0000</pubDate><guid>https://chantsune.github.io/articles/2/</guid><description>三項演算子を使うことで代入の条件分岐を一行でスマートに記述することができます。 用法 (変数) = (条件がTrueのときの値) if (条件) else (条件が</description></item></channel></rss>