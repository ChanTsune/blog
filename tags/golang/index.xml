<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Golang on エンジニアもどきの技術メモ</title><link>https://chantsune.github.io/tags/golang/</link><description>Recent content in Golang on エンジニアもどきの技術メモ</description><generator>Hugo -- gohugo.io</generator><language>ja</language><lastBuildDate>Tue, 07 Jul 2020 02:53:42 +0000</lastBuildDate><atom:link href="https://chantsune.github.io/tags/golang/index.xml" rel="self" type="application/rss+xml"/><item><title>GoのASTからソースコードを生成する</title><link>https://chantsune.github.io/articles/316/</link><pubDate>Tue, 07 Jul 2020 02:53:42 +0000</pubDate><guid>https://chantsune.github.io/articles/316/</guid><description>Goの標準ライブラリを用いてAST(抽象構文木)からソースコードを生成する方法のメモです。 ASTの取得 文字列からGoのASTを取得する例 import (</description></item><item><title>[go] 標準出力への書き込み内容を文字列として取得する</title><link>https://chantsune.github.io/articles/320/</link><pubDate>Fri, 12 Jun 2020 06:05:06 +0000</pubDate><guid>https://chantsune.github.io/articles/320/</guid><description>何らかの事情があってgoで標準出力への書き込み内容を文字列として取得したい場合の対処方法のご紹介。 標準出力の内容を取得する 実は、os.Std</description></item><item><title>[golang] 構造体(struct)のdeepcopy</title><link>https://chantsune.github.io/articles/238/</link><pubDate>Thu, 09 Apr 2020 07:33:53 +0000</pubDate><guid>https://chantsune.github.io/articles/238/</guid><description>golangで構造体のdeepcopyを行う方法のメモです。 ポインタをメンバに持った構造体のdeepcopyをgolangだとどんな感じでで</description></item><item><title>goenvでgolangの環境を構築する</title><link>https://chantsune.github.io/articles/310/</link><pubDate>Fri, 03 Apr 2020 14:04:20 +0000</pubDate><guid>https://chantsune.github.io/articles/310/</guid><description>goenvを使ったgolangの環境構築 goenv goenv は Golang のバージョン管理ツールです。 https://github.com/syndbg/goenv pyenv や rbenv など、他のバージョン管理ツールと同じようなものです。 goenv イ</description></item></channel></rss>