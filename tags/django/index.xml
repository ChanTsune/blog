<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>django on エンジニアもどきの技術メモ</title><link>https://chantsune.github.io/tags/django/</link><description>Recent content in django on エンジニアもどきの技術メモ</description><generator>Hugo -- gohugo.io</generator><language>ja</language><lastBuildDate>Fri, 09 Nov 2018 09:30:03 +0000</lastBuildDate><atom:link href="https://chantsune.github.io/tags/django/index.xml" rel="self" type="application/rss+xml"/><item><title>[Django] プロジェクトの作成とアプリケーションの作成</title><link>https://chantsune.github.io/articles/68/</link><pubDate>Fri, 09 Nov 2018 09:30:03 +0000</pubDate><guid>https://chantsune.github.io/articles/68/</guid><description>Djangoで新しくプロジェクトを作るときに必要な操作をまとめました。 数回に分けて実際に動くブログを作る事を目標にします。 シリーズ一覧 プロジ</description></item><item><title>これだけは知っておきたいDjangoテンプレートの基本文法</title><link>https://chantsune.github.io/articles/67/</link><pubDate>Tue, 30 Oct 2018 05:30:27 +0000</pubDate><guid>https://chantsune.github.io/articles/67/</guid><description>Djangoには便利な「テンプレート」と呼ばれる機能があります。 この機能を利用することで、webページの重複部分を繰り返して書く必要がなくな</description></item><item><title>[Django] ログイン必須のページを作る</title><link>https://chantsune.github.io/articles/62/</link><pubDate>Tue, 23 Oct 2018 00:38:55 +0000</pubDate><guid>https://chantsune.github.io/articles/62/</guid><description>前回、ログイン機能を実装してみましたが、今度はログインした人専用(ログイン必須)のページを作ってみましょう。 関数ベースのビューの場合 関数ベー</description></item><item><title>[Django] テンプレートで文字を切り詰めたい</title><link>https://chantsune.github.io/articles/63/</link><pubDate>Mon, 22 Oct 2018 04:08:03 +0000</pubDate><guid>https://chantsune.github.io/articles/63/</guid><description>最近のwebデザインでカード内に本文がちょっとだけ載っているデザインをよく目にします。 Djangoでも同じように表示させたいという願望のもと</description></item><item><title>[Django] 404ページをカスタマイズする</title><link>https://chantsune.github.io/articles/61/</link><pubDate>Sun, 21 Oct 2018 06:36:02 +0000</pubDate><guid>https://chantsune.github.io/articles/61/</guid><description>Djangoで存在しないURLにアクセスすると以下のような404ページが表示されます。 デバックモード 本番モード 通常はデバックモードでサイトの</description></item><item><title>Djangoで使えるフィールド一覧</title><link>https://chantsune.github.io/articles/60/</link><pubDate>Fri, 19 Oct 2018 02:45:53 +0000</pubDate><guid>https://chantsune.github.io/articles/60/</guid><description>Djangoのモデルには色々なフィールドの型が用意されています。 適切に利用することで効率的で読みやすいデータベースにする事を心掛けましょう。</description></item><item><title>Djangoのfilterを自作してみる</title><link>https://chantsune.github.io/articles/22/</link><pubDate>Thu, 18 Oct 2018 04:33:25 +0000</pubDate><guid>https://chantsune.github.io/articles/22/</guid><description>Djangoには便利なフィルターが多数用意されていますが、自分の使いたい機能が足りないと思うこともあります。 **無いなら作ればいいじゃないか</description></item><item><title>[Django]知ってると便利なforで使える小技</title><link>https://chantsune.github.io/articles/20/</link><pubDate>Sat, 13 Oct 2018 03:23:18 +0000</pubDate><guid>https://chantsune.github.io/articles/20/</guid><description>Djangoのtemplate内で利用するfor文で知ってるとテンプレートがすっきり書けるかもしれない小技の紹介 まずはシンプルに &amp;quot;values&amp;quot;:[&amp;quot;A&amp;quot;,&amp;quot;B&amp;quot;,&amp;quot;C&amp;quot;] {% for value in values</description></item><item><title>Djangoでログイン機能を作る</title><link>https://chantsune.github.io/articles/19/</link><pubDate>Thu, 11 Oct 2018 09:30:40 +0000</pubDate><guid>https://chantsune.github.io/articles/19/</guid><description>今回はDjangoにもともと用意されている機能だけでログイン機能(ユーザー認証)を実装してみようと思います。 環境 python 3.6.3 Django 2.0.8 プロジェクトの作成 ま</description></item><item><title>Djangoのtemplateでifをすっきり書いてみる(yesnoフィルター)</title><link>https://chantsune.github.io/articles/18/</link><pubDate>Thu, 11 Oct 2018 02:43:55 +0000</pubDate><guid>https://chantsune.github.io/articles/18/</guid><description>Djangoで開発を続けていくうちにだんだんとtemplateが複雑になり読みづらくなることがあります。 なので今回はちょっとでもtempla</description></item><item><title>[Django] DateTimeFieldからUnix時間を取り出す</title><link>https://chantsune.github.io/articles/13/</link><pubDate>Tue, 02 Oct 2018 15:49:49 +0000</pubDate><guid>https://chantsune.github.io/articles/13/</guid><description>やりたいこと DjangoのデータベースのDateTimeFieldからUNIX時間を取り出したい。 UNIX時間とは？ UNIX時間、またはUN</description></item><item><title>Djangoのデータベース操作まとめ</title><link>https://chantsune.github.io/articles/10/</link><pubDate>Mon, 01 Oct 2018 09:46:14 +0000</pubDate><guid>https://chantsune.github.io/articles/10/</guid><description>クエリメソッド（QueryAPI）一覧表 Django v2.0に対応 各メソッドの詳細は公式サイトを参照のこと https://docs.djangoproject.com/ja/2.0/ref/models/querysets/ 大分類 小分類 メソッド 全件取得 all() 検索条件を指</description></item><item><title>Djangoでjsonを送受信する</title><link>https://chantsune.github.io/articles/12/</link><pubDate>Mon, 01 Oct 2018 06:55:38 +0000</pubDate><guid>https://chantsune.github.io/articles/12/</guid><description>Djangoでのjsonの送受信についてメモ、送信はいいけど受信は割と忘れそう。 送信 from django.http.response import JsonResponse def jsonSend(request): json_data = {&amp;#34;data&amp;#34;:{&amp;#34;daat1&amp;#34;:&amp;#34;DATA1&amp;#34;,&amp;#34;data2&amp;#34;:&amp;#34;DATA2&amp;#34;}} return JsonResponse(json_data) jsonを送信するには辞書型のオブ</description></item><item><title>DjangoサーバーでGzip転送を有効にしてみる</title><link>https://chantsune.github.io/articles/9/</link><pubDate>Sat, 29 Sep 2018 09:11:15 +0000</pubDate><guid>https://chantsune.github.io/articles/9/</guid><description>やりたいこと Djangoサーバーで配信するHTML等の要素をGzipで圧縮して利用帯域幅を削減したい。 やってみる 実はDjangoには標準でG</description></item><item><title>Djangoで作ったアプリをherokuにデプロイする時の一連の流れ</title><link>https://chantsune.github.io/articles/4/</link><pubDate>Thu, 27 Sep 2018 01:06:13 +0000</pubDate><guid>https://chantsune.github.io/articles/4/</guid><description>このサイト自体を公開する時に行った作業の一連の流れです。 前提 ・python3及びDjangoについて基本的な知識がある事 ・Djangoで既に</description></item></channel></rss>